#pragma OPENCL EXTENSION cl_khr_fp64 : enable

static __global void *alloc(__global void *heap, volatile __global uint *free_index, unsigned int heap_size, int nbytes, int *alloc_failed) {
   __global unsigned char *cheap = (__global unsigned char *)heap;
   uint rounded = nbytes + (8 - (nbytes % 8));
   uint offset = atomic_add(free_index, rounded);
   if (offset + nbytes > heap_size) { *alloc_failed = 1; return 0x0; }
   else return (__global void *)(cheap + offset);
}
typedef struct __attribute__ ((packed)) org_apache_spark_mllib_linalg_DenseVector_s org_apache_spark_mllib_linalg_DenseVector;
typedef struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_DenseVectorInputTest__s org_apache_spark_rdd_cl_tests_DenseVectorInputTest_;

struct __attribute__ ((packed)) org_apache_spark_mllib_linalg_DenseVector_s{
   __global double*  values;
   int  size;
   int  tiling;
   
};


struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_DenseVectorInputTest__s{
   
};

typedef struct This_s{
   } This;

static int org_apache_spark_mllib_linalg_DenseVector__size(__global org_apache_spark_mllib_linalg_DenseVector *this_ptr) {
    return (this_ptr->size);
}



static double org_apache_spark_mllib_linalg_DenseVector__apply(__global org_apache_spark_mllib_linalg_DenseVector *this_ptr, int index) {
    return (this_ptr->values)[this_ptr->tiling * index];
}


static double org_apache_spark_rdd_cl_tests_DenseVectorInputTest__anon_1__apply(This *this_ptr, __global org_apache_spark_mllib_linalg_DenseVector* in){

   
   double sum = 0.0;
   int i = 0;
   for (; i<org_apache_spark_mllib_linalg_DenseVector__size(in); i = i + 1){
   
      sum = sum + org_apache_spark_mllib_linalg_DenseVector__apply(in, i);
   }
   return sum;;
}
__kernel void run(
      __global org_apache_spark_mllib_linalg_DenseVector * restrict in0, __global double * restrict in0_values, __global int * restrict in0_sizes, __global int * restrict in0_offsets, int nin0, int in0_tiling, 
      __global double* restrict out, int N, int iter) {
   This thisStruct;
   This* this_ptr=&thisStruct;
   __global org_apache_spark_mllib_linalg_DenseVector *my_in0 = in0 + get_global_id(0);
   for (int i = get_global_id(0); i < N; i += get_global_size(0)) {
      my_in0->values = in0_values + in0_offsets[i]; my_in0->size = in0_sizes[i]; my_in0->tiling = in0_tiling;
      out[i] = org_apache_spark_rdd_cl_tests_DenseVectorInputTest__anon_1__apply(this_ptr, in0 + i);
      
   }
}
