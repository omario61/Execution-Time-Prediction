
static __device__ void *alloc(void *heap, volatile unsigned *free_index, unsigned int heap_size, int nbytes, int *alloc_failed) {
   unsigned char *cheap = (unsigned char *)heap;
   unsigned rounded = nbytes + (8 - (nbytes % 8));
   unsigned offset = atomicAdd((unsigned int *)free_index, rounded);
   if (offset + nbytes > heap_size) { *alloc_failed = 1; return 0x0; }
   else return (void *)(cheap + offset);
}
template<typename T>
inline T *dense_vec_fill(T *alloc, double *vals, unsigned size, unsigned tiling) {
    alloc->values = vals;
    alloc->size = size;
    alloc->tiling = tiling;
    return alloc;
}
template<typename T>
inline T *sparse_vec_fill(T *alloc, double *vals, int *indices, unsigned size, unsigned tiling) {
    alloc->values = vals;
    alloc->indices = indices;
    alloc->size = size;
    alloc->tiling = tiling;
    return alloc;
}
typedef struct org_apache_spark_rdd_cl_tests_Point_s org_apache_spark_rdd_cl_tests_Point;
typedef struct scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point_s scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point;
typedef struct org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__s org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest_;

struct org_apache_spark_rdd_cl_tests_Point_s{
   float  x;
   float  y;
   float  z;
   
};


struct scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point_s{
   org_apache_spark_rdd_cl_tests_Point  * _2;
   int  _1;
   
};


struct org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__s{
   
};

typedef struct This_s{
   } This;
static float org_apache_spark_rdd_cl_tests_Point__z( org_apache_spark_rdd_cl_tests_Point *this_ptr){
   return this_ptr->z;
}
static float org_apache_spark_rdd_cl_tests_Point__y( org_apache_spark_rdd_cl_tests_Point *this_ptr){
   return this_ptr->y;
}
static float org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__externalPoint(This *this_ptr, org_apache_spark_rdd_cl_tests_Point* v){

   return((v->y + v->z));
}
static float org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__external(This *this_ptr, float v){

   return((v + 3.0f));
}
static float org_apache_spark_rdd_cl_tests_Point__x( org_apache_spark_rdd_cl_tests_Point *this_ptr){
   return this_ptr->x;
}
static float org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__apply(This *this_ptr, scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point* in){

   
   org_apache_spark_rdd_cl_tests_Point *p = in->_2;
   return (org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__external(this_ptr, p->x) + org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__externalPoint(this_ptr, in->_2));;
}
extern "C" __global__ void run(
      int * in0_1, org_apache_spark_rdd_cl_tests_Point* in0_2, scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point * in0, 
      float* out, int N, int iter) {
   This thisStruct;
   This* this_ptr=&thisStruct;
   scala_Tuple2_I_org_apache_spark_rdd_cl_tests_Point *my_in0 = in0 + (blockIdx.x * blockDim.x + threadIdx.x);
   for (int i = (blockIdx.x * blockDim.x + threadIdx.x); i < N; i += (gridDim.x * blockDim.x)) {
      my_in0->_1 = in0_1[i]; my_in0->_2 = in0_2 + i; 
      out[i] = org_apache_spark_rdd_cl_tests_Tuple2ObjectInputPassDirectlyToFuncTest__anon_1__apply(this_ptr, my_in0);
      
   }
}
