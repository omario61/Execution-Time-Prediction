#pragma OPENCL EXTENSION cl_khr_global_int32_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_global_int32_extended_atomics : enable
#pragma OPENCL EXTENSION cl_khr_local_int32_base_atomics : enable
#pragma OPENCL EXTENSION cl_khr_local_int32_extended_atomics : enable
static int atomicAdd(__global int *_arr, int _index, int _delta){
   return atomic_add(&_arr[_index], _delta);
}
#pragma OPENCL EXTENSION cl_khr_fp64 : enable

static __global void *alloc(__global void *heap, volatile __global uint *free_index, unsigned int heap_size, int nbytes, int *alloc_failed) {
   __global unsigned char *cheap = (__global unsigned char *)heap;
   uint rounded = nbytes + (8 - (nbytes % 8));
   uint offset = atomic_add(free_index, rounded);
   if (offset + nbytes > heap_size) { *alloc_failed = 1; return 0x0; }
   else return (__global void *)(cheap + offset);
}
typedef struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_PointWithClassifier_s org_apache_spark_rdd_cl_tests_PointWithClassifier;
typedef struct __attribute__ ((packed)) scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier_s scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier;
typedef struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_KMeansTest__s org_apache_spark_rdd_cl_tests_KMeansTest_;

struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_PointWithClassifier_s{
   float  z;
   float  y;
   float  x;
   
};


struct __attribute__ ((packed)) scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier_s{
   __global org_apache_spark_rdd_cl_tests_PointWithClassifier  * _2;
   int  _1;
   
};


struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_KMeansTest__s{
   
};

typedef struct This_s{
   __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier *centers_1;
   int centers_1__javaArrayLength;
   } This;

static __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier* scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier___init_(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr, int  one, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *  two) {
   this_ptr->_1 = one;
   this_ptr->_2 = two;
   return this_ptr;
}


static float org_apache_spark_rdd_cl_tests_PointWithClassifier__z(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr){
   return this_ptr->z;
}
static float org_apache_spark_rdd_cl_tests_PointWithClassifier__y(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr){
   return this_ptr->y;
}
static float org_apache_spark_rdd_cl_tests_PointWithClassifier__x(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr){
   return this_ptr->x;
}
static __global org_apache_spark_rdd_cl_tests_PointWithClassifier * org_apache_spark_rdd_cl_tests_PointWithClassifier___init_(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr, float x, float y, float z){

   this_ptr->x=x;
   this_ptr->y=y;
   this_ptr->z=z;
   ;
   return (this_ptr);
}
static float org_apache_spark_rdd_cl_tests_PointWithClassifier__dist(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, __global org_apache_spark_rdd_cl_tests_PointWithClassifier *this_ptr, __global org_apache_spark_rdd_cl_tests_PointWithClassifier* center){

   
   float diffx = center->x - this_ptr->x;
   float diffy = center->y - this_ptr->y;
   float diffz = center->z - this_ptr->z;
   return (float)sqrt((double)(((diffx * diffx) + (diffy * diffy)) + (diffz * diffz)));;
}
static __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier *org_apache_spark_rdd_cl_tests_KMeansTest__anon_1__apply(__global void * restrict __swat_heap, __global uint * restrict __swat_free_index, int * restrict __swat_alloc_failed, const int __swat_heap_size, This *this_ptr, __global org_apache_spark_rdd_cl_tests_PointWithClassifier* in){

   
   int closest_center = -1;
   float closest_center_dist = -1.0f;
   int i = 0;
   while (i<this_ptr->centers_1__javaArrayLength){
   
      {
      
         float d = org_apache_spark_rdd_cl_tests_PointWithClassifier__dist(__swat_heap, __swat_free_index, __swat_alloc_failed, __swat_heap_size, in,  (this_ptr->centers_1[i])._2);
         if (i==0 || d<closest_center_dist){
         
            closest_center = i;
            closest_center_dist = d;
         }
         i = i + 1;
      }
   }
   ;
   __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier * __alloc0 = (__global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier *)alloc(__swat_heap, __swat_free_index, __swat_heap_size, sizeof(scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier), __swat_alloc_failed);
   if (*__swat_alloc_failed) { return (0x0); }
   __global org_apache_spark_rdd_cl_tests_PointWithClassifier * __alloc1 = (__global org_apache_spark_rdd_cl_tests_PointWithClassifier *)alloc(__swat_heap, __swat_free_index, __swat_heap_size, sizeof(org_apache_spark_rdd_cl_tests_PointWithClassifier), __swat_alloc_failed);
   if (*__swat_alloc_failed) { return (0x0); }
   return scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier___init_(__swat_heap, __swat_free_index, __swat_alloc_failed, __swat_heap_size, __alloc0,  (this_ptr->centers_1[closest_center])._1, org_apache_spark_rdd_cl_tests_PointWithClassifier___init_(__swat_heap, __swat_free_index, __swat_alloc_failed, __swat_heap_size, __alloc1,  (this_ptr->centers_1[closest_center])._2->x,  (this_ptr->centers_1[closest_center])._2->y,  (this_ptr->centers_1[closest_center])._2->z));;
}
__kernel void run(
      __global org_apache_spark_rdd_cl_tests_PointWithClassifier* restrict in0, 
      __global int * restrict out_1, __global org_apache_spark_rdd_cl_tests_PointWithClassifier* restrict out_2, __global int * restrict centers_1_1, __global org_apache_spark_rdd_cl_tests_PointWithClassifier* restrict centers_1_2, __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier * restrict centers_1, int centers_1__javaArrayLength, __global void * restrict heap, __global uint * restrict free_index, unsigned int heap_size, __global int * restrict processing_succeeded, int N, int iter) {
   This thisStruct;
   This* this_ptr=&thisStruct;
   this_ptr->centers_1 = centers_1; for (int ii = 0; ii < centers_1__javaArrayLength; ii++) { centers_1[ii]._1 = centers_1_1[ii]; centers_1[ii]._2 = centers_1_2 + ii;  } ;
   this_ptr->centers_1__javaArrayLength = centers_1__javaArrayLength;
   for (int i = get_global_id(0); i < N; i += get_global_size(0)) {
      if (iter == 0) processing_succeeded[i] = 0;
      else if (processing_succeeded[i]) continue;
      int alloc_failed = 0;
      __global scala_Tuple2_I_org_apache_spark_rdd_cl_tests_PointWithClassifier* result = org_apache_spark_rdd_cl_tests_KMeansTest__anon_1__apply(heap, free_index, &alloc_failed, heap_size, this_ptr, in0 + i);
      if (!alloc_failed) {
         processing_succeeded[i] = 1;
         out_1[i] = result->_1;
         out_2[i] = *(result->_2);
      }
   }
}
