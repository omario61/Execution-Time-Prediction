#pragma OPENCL EXTENSION cl_khr_fp64 : enable

static __global void *alloc(__global void *heap, volatile __global uint *free_index, unsigned int heap_size, int nbytes, int *alloc_failed) {
   __global unsigned char *cheap = (__global unsigned char *)heap;
   uint rounded = nbytes + (8 - (nbytes % 8));
   uint offset = atomic_add(free_index, rounded);
   if (offset + nbytes > heap_size) { *alloc_failed = 1; return 0x0; }
   else return (__global void *)(cheap + offset);
}
typedef struct __attribute__ ((packed)) org_apache_spark_mllib_linalg_DenseVector_s org_apache_spark_mllib_linalg_DenseVector;
typedef struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__s org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest_;

struct __attribute__ ((packed)) org_apache_spark_mllib_linalg_DenseVector_s{
   __global double*  values;
   int  size;
   int  tiling;
   
};


struct __attribute__ ((packed)) org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__s{
   
};

typedef struct This_s{
   __global org_apache_spark_mllib_linalg_DenseVector *broadcast_1; ;
   int broadcast_1__javaArrayLength;
   } This;

static int org_apache_spark_mllib_linalg_DenseVector__size(__global org_apache_spark_mllib_linalg_DenseVector *this_ptr) {
    return (this_ptr->size);
}



static double org_apache_spark_mllib_linalg_DenseVector__apply(__global org_apache_spark_mllib_linalg_DenseVector *this_ptr, int index) {
    return (this_ptr->values)[this_ptr->tiling * index];
}


static double org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__anon_1__apply_mcDI_sp(This *this_ptr, int in){

   
   double sum = 0.0;
   int i = 0;
   for (; i<5; i = i + 1){
   
      sum = sum + org_apache_spark_mllib_linalg_DenseVector__apply(&(this_ptr->broadcast_1[i]), i);
   }
   return sum;;
}
static double org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__anon_1__apply(This *this_ptr, int in){

   return(org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__anon_1__apply_mcDI_sp(this_ptr, in));
}
__kernel void run(
      __global int* restrict in0, 
      __global double* restrict out, __global org_apache_spark_mllib_linalg_DenseVector * restrict broadcast_1, __global double * restrict broadcast_1_values, __global int * restrict broadcast_1_sizes, __global int * restrict broadcast_1_offsets, int nbroadcast_1, int broadcast_1_tiling, int broadcast_1__javaArrayLength, int N, int iter) {
   This thisStruct;
   This* this_ptr=&thisStruct;
   this_ptr->broadcast_1 = broadcast_1;
   for (int j = 0; j < nbroadcast_1; j++) {
      (this_ptr->broadcast_1)[j].values = broadcast_1_values + broadcast_1_offsets[j];
      (this_ptr->broadcast_1)[j].size = broadcast_1_sizes[j];
      (this_ptr->broadcast_1)[j].tiling = broadcast_1_tiling;
   }
;
   this_ptr->broadcast_1__javaArrayLength = broadcast_1__javaArrayLength;
   for (int i = get_global_id(0); i < N; i += get_global_size(0)) {
      out[i] = org_apache_spark_rdd_cl_tests_DenseVectorBroadcastTest__anon_1__apply(this_ptr, in0[i]);
      
   }
}
